# Párrafo que aparece en el README en la sección de Objetivos de aprendizaje
# de cada proyecto.
description: >
  Reflita e depois enumere os objetivos que quer alcançar e aplique no seu
  projeto. Pense nisso para decidir sua estratégia de trabalho.

#############################
# Objetivos de aprendizagem #
#############################

html: HTML

html/semantics:
  title: Uso de HTML semântico
  links:
  - title: Semantics in HTML - MDN
    url: https://developer.mozilla.org/en-US/docs/Glossary/Semantics#Semantics_in_HTML

css: CSS

css/selectors:
  title: Uso de seletores de CSS

css/flexbox:
  title: Uso de flexbox en CSS
  links:
  - title: A Complete Guide to Flexbox - CSS Tricks
    url: https://css-tricks.com/snippets/css/a-guide-to-flexbox/

css/box-model:
  title: "Empregar o modelo de caixa (box model): borda, margem, preenchimento"

browser: Web APIs

browser/dom: DOM (Document Object Model)

browser/dom/selectors:
  title: Uso de seletores de DOM

browser/dom/events:
  title: Gerenciamento de eventos de DOM

browser/dom/manipulation:
  title: Manipulação dinâmica de DOM
  links:
  - title: Introdução ao DOM
    url: https://developer.mozilla.org/pt-BR/docs/DOM/Referencia_do_DOM/Introdu%C3%A7%C3%A3o
  - title: Node.appendChild() - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/API/Node/appendChild
  - title: Document.createElement() - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/API/Document/createElement
  # - title: Document.createTextNode()
  #   url: https://developer.mozilla.org/pt-BR/docs/Web/API/Document/createTextNode
  - title: Element.innerHTML - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/API/Element/innerHTML
  - title: Node.textContent - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/API/Node/textContent

browser/routing:
  title: Routing (History API, evento hashchange, window.location)
  links:
  - title: Manipulando o histórico do navegador - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/API/History_API

browser/storage:
  title: Storage
  links:
  - title: Window.localStorage - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/API/Window/Window.localStorage

browser/fetch:
  title: Fetch API
  links:
  - title: Fetch API - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/API/Fetch_API

js: JavaScript

js/data-types/primitive-vs-non-primitive:
  title: Diferenciar entre tipos de dados primitivos e não primitivos

js/data-types/arrays:
  title: Manipular arrays (filter, map, sort, reduce)
  links:
  - title: Array.prototype.sort() - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/sort
  - title: Array.prototype.forEach() - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach
  - title: Array.prototype.map() - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/map
  - title: Array.prototype.filter() - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/filter
  - title: Array.prototype.reduce() - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce

js/data-types/objects:
  title: Manipular objects (key | value)

js/conditionals:
  title: Uso de condicionais (if-else, switch, operador ternário)

js/functions:
  title: Uso de funções (parâmetros, argumentos, valor de retorno)

js/loops:
  title: Uso de laços (for, for..of, while)

js/recursion:
  title: Recursão
  links:
  - title: Píldora recursión - YouTube Laboratoria Developers
    url: https://www.youtube.com/watch?v=lPPgY3HLlhQ

js/modules/es-modules:
  title: Uso ES modules
  links:
  - title: import - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Statements/import
  - title: export - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Statements/export

js/modules/commonjs:
  title: Módulos de CommonJS
  links:
  - title: "Modules: CommonJS modules - Node.js Docs"
    url: https://nodejs.org/docs/latest/api/modules.html

js/expression-vs-statement:
  title: Diferença entre expression e statements

js/testing/unit:
  title: Testes unitários
  links:
  - title: Introdução ao Jest - Documentação oficial
    url: https://jestjs.io/docs/pt-BR/getting-started

js/testing/async:
  title: Testes assíncronos
  links:
  - title: Testando Código Assíncrono - Documentação oficial
    url: https://jestjs.io/docs/pt-BR/asynchronous

js/testing/mocks:
  title: Mocking
  links:
  - title: Simulações Manuais - Documentação oficial
    url: https://jestjs.io/docs/pt-BR/manual-mocks

js/testing/e2e:
  title: Testes de integração (end-to-end)

js/testing/compatibility:
  title: Teste de compatibilidade em vários ambientes de tempo de execução

js/semantics:
  title: Uso de identificadores descritivos (Nomenclatura | Semântica)

js/linting:
  title: Uso de linter (ESLINT)

js/async/callbacks:
  title: Uso de callbacks
  links:
  - title: Função Callback - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Glossario/Callback_function

js/async/promises:
  title: Promise
  links:
  - title: How to Write a JavaScript Promise - freecodecamp (em inglês)
    url: https://www.freecodecamp.org/news/how-to-write-a-javascript-promise-4ed8d44292b8/

scm:
  title: Git e GitHub

scm/git/setup:
  title: "Git: Instalação e configuração"

scm/git/intro:
  title: "Git: Controle de versão com git (init, clone, add, commit, status, push, pull, remote)"

scm/git/integration:
  title: "Git: Integração de mudanças entre ramos (branch, checkout, fetch, merge, reset, rebase, tag)"

scm/github/setup:
  title: "GitHub: Criação de contas e repositórios, configuração de chave SSH"

scm/github/collaboration:
  title: "GitHub: Colaboração pelo Github (branches | forks | pull requests | code review | tags)"

scm/github/gh-pages:
  title: "GitHub: Implantação com GitHub Pages"
  links:
  - title: Site oficial do GitHub Pages
    url: https://pages.github.com/

scm/github/project-management:
  title: "GitHub: Organização pelo Github (projects | issues | labels | milestones | releases)"

scm/github/ci:
  title: "GitHub: Integração contínua com GitHub actions"

ux: UX (User eXperience)

ux/user-understanding:
  title: Desenhar a aplicação pensando e entendendo o usuário

ux/prototyping:
  title: Criar protótipos para obter feedback e iterar

ux/visual-design:
  title: Aplicar os princípios de desenho visual (contraste, alinhamento, hierarquia)

ux/usability-testing:
  title: Planejar e executar testes de usabilidade

firebase: Firebase

firebase/auth:
  title: Firebase Auth
  links:
  - title: Primeiros passos com o Firebase Authentication em sites - Documentação oficial
    url: https://firebase.google.com/docs/auth/web/start?hl=pt-BR
  - title: Gerenciar usuários no Firebase (onAuthStateChanged) - Documentação oficial
    url: https://firebase.google.com/docs/auth/web/manage-users?hl=pt-BR

firebase/firestore:
  title: Firestore
  links:
  - title: Firestore - Documentação oficial
    url: https://firebase.google.com/docs/firestore?hl=pt-BR
  - title: Regras de segurança do Firebase - Documentação oficial
    url: https://firebase.google.com/docs/rules?hl=pt-BR
  - title: Receber atualizações em tempo real com o Cloud Firestore - Documentação oficial
    url: https://firebase.google.com/docs/firestore/query-data/listen?hl=pt-BR

node: Node.js

node/npm-install:
  title: Instalar e usar módulos (npm)
  links:
  - title: Sitio oficial de npm (em inglês)
    url: https://www.npmjs.com/

node/package.json:
  title: Configuração do package.json
  links:
  - title: package.json - Documentação oficial (em inglês)
    url: https://docs.npmjs.com/files/package.json

node/npm-scripts:
  title: Configuração do npm-scripts
  links:
  - title: scripts - Documentação oficial (em inglês)
    url: https://docs.npmjs.com/misc/scripts

node/filesystem:
  title: Uso de sistema de arquivos (fs, path)
  links:
  - title: File system - Documentación oficial (en inglés)
    url: https://nodejs.org/api/fs.html
  - title: Path - Documentación oficial (en inglés)
    url: https://nodejs.org/api/path.html

node/process:
  title: process (env, argv, stdin-stdout-stderr, exit-code)
  links:
  - title: Process - Documentación oficial (en inglés)
    url: https://nodejs.org/api/process.html

express: Express.js

express/routing:
  title: Rotas

express/middleware:
  title: Uso e criação de middleware

http: HTTP

http/request-response:
  title: Solicitações o requisições (request) e respostas (response).
  links:
  - title: Uma visão geral do HTTP - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/HTTP/Overview
  # - title: Mensajes HTTP - MDN
  #   url: https://developer.mozilla.org/pt-BR/docs/Web/HTTP/Messages

http/headers:
  title: Cabeçalhos (headers)
  links:
  - title: Cabeçalhos HTTP - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/HTTP/Headers

http/body:
  title: Corpo (body)
  links:
  - title: POST - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/HTTP/Methods/POST

http/verbs:
  title: Verbos HTTP
  links:
  - title: Métodos de requisição HTTP - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/HTTP/Methods

http/status-codes:
  title: Codigos de status de HTTP
  links:
  - title: Códigos de status de respostas HTTP - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/HTTP/Status
  - title: The Complete Guide to Status Codes for Meaningful ReST APIs - dev.to
    url: https://dev.to/khaosdoctor/the-complete-guide-to-status-codes-for-meaningful-rest-apis-1-5c5

http/json:
  title: Encodings e JSON
  links:
  - title: Introdução ao JSON - Documentação oficial
    url: https://www.json.org/json-pt.html

http/cors:
  title: CORS (Cross-Origin Resource Sharing)
  links:
  - title: Cross-Origin Resource Sharing (CORS) - MDN
    url: https://developer.mozilla.org/pt-BR/docs/Web/HTTP/CORS

auth: Autenticação

auth/jwt:
  title: JWT (JSON Web Token)

auth/password-access-and-storage:
  title: Armazenamento e acesso de senhas

webops: WebOps

webops/env-vars:
  title: Variáveis de ambiente

webops/docker-containers:
  title: Containers (Docker)

webops/docker-compose:
  title: Docker compose

db: Bases de dados (escolher entre MongoDB, PostgreSQL ou MySQL)

db/install:
  title: Instalação

db/conection:
  title: Conexão

db/queries:
  title: Queries e comandos (criação, leitura, atualização, eliminação)
